libname rutmed'/sasdata3/SAS_MINING/egusers/rutmed';

data Cap_test;
set rutmed.PB_DIU_ABT_FINAL;
format subs_key1 $char50.;
subs_key1= input(subs_key,$50.);
run;


%let base=Cap_test;

DATA IV2;
SET rutmed.iv_dl rutmed.iv_dl2;
run;

proc sort data=IV2;
by descending iv;
run;

proc sql ;
select var_name into: var SEPARATED BY " "
from IV2(obs=350);
run;
%put &var.;

proc sort data=&base;by subs_key1;run;

/*proc sql;*/
/*select name into:var1 separated by " " from dictionary.columns */
/*where libname='RUTMED' and memname="HR_RT_ABT_FINAL_NEW"*/
/*and name not in ('TAG','TARGET','subs_key')*/
/*;run;*/

%put &var1;

proc transpose data=&base( keep=subs_key1 &var) out=temp;
  var _numeric_;
  by subs_key1;
run;

proc sort data=temp;by _name_;run;

proc means data=temp noprint ;
  output out=rutmed.univar_PB(rename=(_name_=varname) drop = _type_ _freq_)
                                P1()=p_1 P99()=P_99 MIN=MIN_ MAX=MAX_;
  by _name_;
run;





libname  rutmed '/sasdata3/SAS_MINING/egusers/rutmed';

/** keeping backup for original ABT**/
data rutmed.PB_DIU_ABT_FINAL_cap;
set rutmed.PB_DIU_ABT_FINAL;
run;


%let var=
CHG_REV_L15_M2D8M2D22
CHG_REV_L7_M2D24M2D30
SLP_IC_MOU_ALL_L15
SLP_IC_MOU_ALL_L37
SLP_IC_MOU_ALL_L7
SLP_LOC_IC_MOU_L15
SLP_LOC_IC_MOU_L37
SLP_LOC_IC_MOU_L7
SLP_LOC_OG_MOU_L15
SLP_LOC_OG_MOU_L37
SLP_LOC_OG_MOU_L7
SLP_MBL_L15
SLP_MBL_L37
SLP_MBL_L7
SLP_MBL_M2
SLP_OG_HOM_MOU_L15
SLP_OG_HOM_MOU_L37
SLP_OG_HOM_MOU_L7
SLP_OG_MOU_ALL_L15
SLP_OG_MOU_ALL_L37
SLP_OG_MOU_ALL_L7
SLP_OG_REV_L15
SLP_OG_REV_L37
SLP_OG_REV_L7
SLP_REV_L15
SLP_REV_L37
SLP_REV_L7
SLP_RTD_MOU_L15
SLP_RTD_MOU_L7
SLP_RTD_MOU_M2
SLP_STD_OG_MOU_L37
SLP_STD_OG_MOU_L7
SLP_STD_OG_REV_L15
SLP_STD_OG_REV_L37
SLP_STD_OG_REV_L7
SLP_Voice_ARPU_L37
SLP_Voice_ARPU_L7
SUM_REV_L4
SUM_REV_M2D24_M2D30
CHG_IC_MOU_ALL_L15_M2D8M2D22
CHG_IC_MOU_ALL_L7_M2
CHG_LOC_IC_MOU_L15_M2D8M2D22
CHG_LOC_IC_MOU_L7_M2
CHG_LOC_OG_MOU_L15_M2D8M2D22
CHG_LOC_OG_MOU_L7_M2
CHG_LOC_OG_MOU_L7_M2D24M2D30
CHG_OG_HOM_MOU_L15_M2D8M2D22
CHG_OG_HOM_MOU_L7_M2
CHG_OG_HOM_MOU_L7_M2D24M2D30
CHG_OG_MOU_ALL_L15_M2D8M2D22
CHG_OG_MOU_ALL_L7_M2
CHG_OG_MOU_ALL_L7_M2D24M2D30
CHG_OG_REV_ALL_L7_M2
CHG_REV_L7_M2
CHG_RTD_MOU_L15_M2D8M2D22
CHG_RTD_MOU_L7_M2
CHG_STD_OG_MOU_L15_M2D8M2D22
CHG_STD_OG_MOU_L7_M2
CHG_Voice_ARPU_L15_M2D8M2D22
CHG_Voice_ARPU_L7_M2
CNT_IC_ANY_L15
CNT_IC_ANY_L37
MAX_MBL_L15
MAX_MBL_L4
MAX_MBL_L7
PROP_LOC_OG_MOU_ALL_L15
PROP_LOC_OG_MOU_ALL_L7
RAT_CNT_OG_ANY_L7_M2
RAT_IC_MOU_ALL_L21_L37
RAT_IC_MOU_ALL_M1_M2
RAT_LOC_IC_MOU_L21_L37
RAT_LOC_IC_MOU_M1_M2
RAT_LOC_OG_ALL_OG_MOU_L4
RAT_LOC_OG_IC_MOU_L15
RAT_LOC_OG_IC_MOU_L4
RAT_LOC_OG_IC_MOU_L7
RAT_LOC_OG_MOU_L15_L37
RAT_LOC_OG_MOU_L21_L37
RAT_LOC_OG_MOU_M1_M2
RAT_OG_HOM_MOU_L15_L37
RAT_OG_HOM_MOU_L21_L37
RAT_OG_HOM_MOU_M1_M2
RAT_OG_IC_MOU_ALL_L15
RAT_OG_IC_MOU_ALL_L7
RAT_OG_MOU_ALL_L15_L37
RAT_OG_MOU_ALL_L21_L37
RAT_OG_MOU_ALL_M1_M2
RAT_OG_REV_ALL_L15_L37
RAT_OG_REV_ALL_L21_L37
RAT_OG_REV_ALL_L7_L37
RAT_OG_REV_ALL_M1_M2
RAT_OG_REV_OG_MOU_ALL_L7
RAT_REV_L15_L37
RAT_REV_L21_L37
RAT_REV_M1_M2
RAT_STD_OG_REV_MOU_L4
RAT_STD_OG_REV_MOU_L7
RAT_Voice_ARPU_L15_L37
RAT_Voice_ARPU_L21_L37
RAT_Voice_ARPU_L7_L37
RAT_Voice_ARPU_M1_M2
SD_MBL_L7
;

%macro Cap_floor();

%do i = 1 %to 102;

%let Capvar=%scan(&var.,&i);

data _null_;
     set rutmed.univar_PB;
     where varname="&capvar.";
     call symput('P_99',compress(P_99));
       call symput('P_1',compress(P_1));
       call symput('chg_max',compress(chg_max));
       call symput('chg_min',compress(chg_min));
   run;
   %put &P_99.;
    %put &P_1.;


data rutmed.PB_DIU_ABT_FINAL_cap;
set rutmed.PB_DIU_ABT_FINAL_cap;
if &Capvar.> &P_99. then  &Capvar.= &P_99.;else if &Capvar.=&Capvar.;
if &Capvar.< &P_1. then &Capvar.= &P_1.;else if &Capvar.=&Capvar.;

run;
%end;

%mend ;

%cap_floor();


proc means data= rutmed.PB_DIU_ABT_FINAL_cap min max ;
run;

/*keeping FC variables AND LC vars only */

data rutmed.PB_DIU_ABT_FINAL_cap_2 
(DROP=PROP_LOC_I2I_MOU_OG_MOU_L7
MAX_REV_L37
SD_REV_L37
SD_OG_REV_4DB_L36
SD_Voice_ARPU_3DB_L36
SD_OG_MOU_ALL_4DB_L36
RAT_STD_OG_IC_MOU_L7
MAX_RTD_MOU_M2
SUM_OG_MOU_ALL_M1
RAT_OG_MOU_ALL_L7_L37
RAT_IC_MOU_ALL_L15_L37
SUM_LOC_IC_MOU_L37
SLP_STD_OG_MOU_L15
CNT_STD_OG_INS_L14
DLY_AVG_RCH_VAL_L67
PROP_I2I_OG_MOU_L7
RAT_RTD_MOU_L7_L37
RAT_OG_HOM_MOU_L7_L37
RAT_STD_OG_IC_MOU_L4
SD_RTD_MOU_3DB_L36
SUM_IC_MOU_ALL_L37
SD_LOC_IC_MOU_L37
CNT_DATA_INS_M2
RAT_OG_REV_OG_MOU_ALL_L15
SUM_OG_HOM_MOU_M1
SUM_LOC_IC_MOU_M1
RAT_LOC_OG_MOU_L7_L37
MAX_STD_OG_REV_L15
MAX_STD_OG_REV_L15
RAT_STD_OG_REV_MOU_L15
SUM_RTD_MOU_M1
MAX_OG_HOM_MOU_M2
SD_OG_REV_3DB_L36
CHG_STD_IC_MOU_L7_M2
SD_LOC_OG_MOU_M2
PROP_OG_MOU_TOT_MOU_ALL_L15
SD_OG_MOU_ALL_3DB_L36
RAT_LOC_IC_MOU_L15_L37
SD_OG_HOM_MOU_3DB_L36
SUM_REV_L30
SUM_OG_REV_ALL_M1
MAX_LOC_OG_MOU_M2
CNT_STD_IC_INS_L7
CNT_STD_INS_L14
RAT_CNT_IC_ANY_L7_M2
SUM_IC_MOU_ALL_M1
SD_LOC_OG_MOU_L37
SD_LOC_OG_MOU_4DB_L36
CNT_STD_IC_INS_L4
MAX_OG_MOU_ALL_M2
SD_LOC_IC_MOU_3DB_L36
SD_LOC_OG_MOU_3DB_L36
SD_Voice_ARPU_L37
RAT_LOC_OG_ALL_OG_MOU_L30
MAX_LOC_IC_MOU_L37
SD_LOC_IC_MOU_4DB_L36
SD_STD_OG_REV_L15
SD_STD_OG_REV_L15
RAT_CUST_REV_BY_MOU_L37
RAT_STD_IC_MOU_L21_L37
PROP_LOC_OG_MOU_ALL_L37
SUM_OG_HOM_REV_L37
SD_IC_MOU_ALL_L37
MAX_OG_REV_ALL_M2
SD_LOC_IC_MOU_M2
CHG_STD_IC_MOU_L15_M2D8M2D22
MAX_STD_IC_MOU_L4
SD_STD_IC_MOU_L4
MAX_LOC_OG_MOU_L37
SUM_Voice_ARPU_M1
CNT_RCH_VAL_GT_100_L15
PROP_OG_MOU_ANY_L37
RAT_STD_IC_MOU_L15_L37
SLP_STD_IC_MOU_L37
SD_STD_OG_REV_M2
CNT_RCH_VAL_GT_30_L37
SUM_REV_M1
SD_IC_MOU_ALL_3DB_L36
MAX_STD_OG_MOU_L15
SUM_STD_OG_REV_L15
RAT_OG_IC_MOU_ALL_L37
RAT_STD_OG_IC_MOU_L15
RAT_LOC_OG_IC_MOU_L37
MAX_IC_MOU_ALL_L37
SD_IC_MOU_ALL_4DB_L36
MAX_STD_IC_MOU_L7
SD_STD_IC_MOU_L7
CNT_STD_IC_INS_L14
RAT_LOC_OG_IC_MOU_M2
SD_OG_HOM_MOU_L37
MAX_LOC_IC_MOU_M2
CHG_STD_IC_MOU_L7_M2D24M2D30
SUM_STD_OG_MOU_L15
SD_STD_OG_MOU_L15
SD_MBL_L37
RAT_STD_OG_REV_MOU_L37
MAX_OG_HOM_MOU_L37
SUM_STD_IC_MOU_L4
RAT_STD_IC_MOU_L7_L37
SD_STD_OG_REV_3DB_L36
CNT_RMG_INS_M2
RAT_STD_OG_ALL_OG_MOU_L37
RAT_STD_OG_ALL_OG_MOU_M2
MAX_RTD_MOU_L37
SD_IC_MOU_ALL_M2
SD_OG_REV_ALL_L37
SLP_STD_IC_MOU_L7
SD_STD_OG_REV_4DB_L36
MAX_Voice_ARPU_L37
PROP_LOC_I2I_MOU_OG_MOU_L15
PROP_I2I_OG_MOU_L15
PROP_OG_HOM_REV_L37
RAT_STD_OG_ALL_OG_MOU_L4
RAT_STD_OG_REV_MOU_M2
SD_RTD_MOU_L37
SUM_STD_IC_MOU_L7
CNT_SMS_TOT_ALL_L7
SD_OG_MOU_ALL_L37
MAX_IC_MOU_ALL_M2
SUM_OG_REV_ALL_L37
SUM_STD_IC_MOU_L15
RAT_HOM_MOU_ALL_L37
MAX_OG_MOU_ALL_L37
MAX_STD_IC_MOU_L15
SUM_STD_OG_REV_L21
SUM_STD_OG_REV_M2D24_M2D30
SUM_STD_OG_REV_L21
SUM_STD_OG_REV_M2D24_M2D30
AVG_RCH_VAL_L67
CNT_RCH_VAL_GT_50_L37
RAT_OG_REV_OG_MOU_ALL_L37
RAT_IC_MOU_ALL_L7_L37
RAT_LOC_IC_MOU_L7_L37
SD_STD_IC_MOU_L15
SLP_STD_IC_MOU_L15
SD_STD_OG_MOU_4DB_L36
SD_MBL_3DB_L36
CNT_DATA_INS_L4
CNT_SMS_OG_ALL_L7
SUM_STD_IC_MOU_L21
SUM_STD_IC_MOU_M2D24_M2D30
RAT_STD_OG_MOU_M1_M2
SUM_STD_OG_MOU_L21
SD_STD_OG_MOU_M2
SD_STD_OG_MOU_3DB_L36
SD_STD_OG_REV_L37
MAX_MBL_L37
SD_MBL_4DB_L36
CNT_SMS_TOT_ALL_L15
RAT_STD_OG_ALL_OG_MOU_L7
RAT_STD_IC_MOU_M1_M2
SUM_STD_OG_MOU_M2D24_M2D30
MAX_STD_OG_MOU_M2
SD_STD_OG_MOU_L37
SUM_STD_OG_REV_L30
MAX_STD_OG_REV_L37
CNT_RCH_VAL_GT_100_L37
PROP_OG_MOU_TOT_MOU_ALL_L37
PROP_LOC_I2I_MOU_OG_MOU_L37
PROP_I2I_OG_MOU_L37
RAT_STD_OG_IC_MOU_L37
RAT_STD_OG_IC_MOU_M2
SUM_STD_IC_MOU_L30
SUM_STD_IC_MOU_L37
SUM_STD_IC_MOU_M1
MAX_STD_IC_MOU_M2
SUM_STD_OG_MOU_L30
SUM_STD_OG_MOU_L37
SUM_STD_OG_MOU_M1
MAX_STD_OG_MOU_L37
SUM_STD_OG_REV_L37
SUM_STD_OG_REV_M1
RAT_STD_OG_REV_M1_M2
MAX_STD_OG_REV_M2
MAX_MBL_M2
SD_MBL_M2
CNT_RMG_INS_L4
CNT_SMS_OG_ALL_L15
SUM_REV_L37
MAX_OG_REV_ALL_L37
SD_STD_IC_MOU_M2
MAX_STD_IC_MOU_L37
SD_STD_IC_MOU_L37
SD_STD_IC_MOU_4DB_L36
SD_STD_IC_MOU_3DB_L36
SUM_Voice_ARPU_L37
CNT_DATA_INS_L7
CNT_DATA_INS_L14
CNT_RMG_INS_L7
CNT_RMG_INS_L14
CNT_STD_OG_INS_M2
CNT_STD_IC_INS_M2
CNT_STD_INS_M2
CNT_SMS_OG_ALL_L37
CNT_SMS_TOT_ALL_L37
RAT_STD_OG_ALL_OG_MOU_L15

);
set rutmed.PB_DIU_ABT_FINAL_cap;
run;




From: Rutuja Medhekar 
Sent: Monday, October 01, 2018 2:52 PM
To: Aditi Jitendra Shah <Aditi.JitendraShah@idea.adityabirla.com>; Salim Ramzanali Shaikh <SShaikh@idea.adityabirla.com>
Subject: RE: Code for slope

%MACRO DECST( DATE1= , DATE2=   , OUT=);
PROC SQL;
   CREATE TABLE DEC_IND1_&OUT AS 
   SELECT SUBS_KEY, 
            VAR AS DEC1_&OUT
      FROM TEMP
      WHERE &DATE1 <=  EVENT_DT <= &DATE2 ORDER BY SUBS_KEY;

       CREATE TABLE DEC_IND_&OUT AS 
    SELECT SUBS_KEY, 
            SUM(DEC1_&OUT) AS DEC_&OUT, 
          AVG(DEC1_&OUT) AS AVG_DEC_&OUT
      FROM DEC_IND1_&OUT
    GROUP  BY SUBS_KEY;

    SELECT AVG(AVG_DEC_&OUT) INTO:SAMP_MEAN FROM DEC_IND_&OUT ;
    SELECT STD(AVG_DEC_&OUT) INTO:SAMP_STD FROM DEC_IND_&OUT ;
  %LET SAMP_MEAN = &SAMP_MEAN;
  %LET SAMP_STD = &SAMP_STD;
    
  CREATE TABLE DEC_TABLE_&OUT AS 
    SELECT SUBS_KEY, DEC_&OUT,AVG_DEC_&OUT, &SAMP_STD AS SAMP_STD,
     &SAMP_MEAN AS SAMP_MEAN,
     (AVG_DEC_&OUT - &SAMP_MEAN) AS DIFF,
     (CALCULATED DIFF /&SAMP_STD) AS SND_DEC_&OUT FORMAT 16.2
FROM DEC_IND_&OUT ORDER  BY SUBS_KEY;
quit;

%MEND DECST;


%DECST ( DATE1= "&Last7days"D  , DATE2= &run_date  , OUT=L7);
%DECST ( DATE1= "&Last15days"D  , DATE2= &run_date  , OUT=L15);

PROC SQL;
   CREATE TABLE SND_DEC_TAB (compress=yes) AS 
   SELECT t1.*, 
          t2.SND_DEC_L7, 
          t3.SND_DEC_L15
      FROM &base. t1 
            LEFT JOIN WORK.DEC_TABLE_L7 t2 ON (t1.SUBS_KEY = t2.SUBS_KEY) 
            LEFT JOIN WORK.DEC_TABLE_L15 t3 ON (t1.SUBS_KEY = t3.SUBS_KEY);
QUIT;

PROC DATASETS LIB=WORK NOLIST;
DELETE  DEC_: ;
QUIT;

DATA &base.;
SET SND_DEC_TAB;
RUN;


From: Rutuja Medhekar 
Sent: Monday, October 01, 2018 1:53 PM
To: Aditi Jitendra Shah <Aditi.JitendraShah@idea.adityabirla.com>; Salim Ramzanali Shaikh <SShaikh@idea.adityabirla.com>
Subject: Code for slope

/************************SLP_OG_HOM_MOU_L15************************/

PROC SQL;
   CREATE TABLE OG_HOM_MOU_L15 AS 
   SELECT  subs_key_char,EVENT_DT,
           (SUM(TOT_OG_HOME_MOU,0)) AS OG_HOM_MOU_L15
      FROM &rawdata
      WHERE   "&Last15days"d <=  EVENT_DT <= &run_date
ORDER BY subs_key_char, EVENT_DT asc;
quit;

DATA OG_HOM_MOU_L15;
  SET OG_HOM_MOU_L15;
  DAY+1;
  BY subs_key_char;
  IF FIRST.subs_key_char THEN DAY = 1;
  RUN;

PROC SQL;
CREATE TABLE MOU_SLOPE_L15 AS  
  SELECT  subs_key_char,OG_HOM_MOU_L15,AVG(OG_HOM_MOU_L15) AS AVG_OG_HOM_MOU_L15, 
  DAY, AVG(DAY) AS AVG_DAY,
(OG_HOM_MOU_L15 - CALCULATED AVG_OG_HOM_MOU_L15) AS DIFF_MOUL15,
  (DAY - CALCULATED AVG_DAY) AS DIFF_DAYL15, 
 (CALCULATED DIFF_MOUL15*CALCULATED DIFF_DAYL15) AS PROD_DEC_DAYL15,
(CALCULATED DIFF_DAYL15*CALCULATED DIFF_DAYL15) AS SQ_DAYL15
  FROM OG_HOM_MOU_L15 GROUP BY subs_key_char ;

  CREATE TABLE MOU_SLOPE_L15 AS
  SELECT subs_key_char , SUM(PROD_DEC_DAYL15) AS num, SUM(SQ_DAYL15) AS denom, 
(CALCULATED num / CALCULATED denom) AS SLP_OG_HOM_MOU_L15  FORMAT 8.2 FROM MOU_SLOPE_L15  
GROUP BY subs_key_char ;
QUIT;

PROC SQL;
   CREATE TABLE RUTMED.ABT_OOT (compress=yes)  AS 
   SELECT T1.*,
             T2.SLP_OG_HOM_MOU_L15
      FROM RUTMED.ABT_OOT AS T1 
LEFT JOIN MOU_SLOPE_L15 AS T2 ON (T1.subs_key_char = T2.subs_key_char);
QUIT;
